/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PingResponse,
} from '../models/index';
import {
    PingResponseFromJSON,
    PingResponseToJSON,
} from '../models/index';

export interface PingRetrieveRequest {
    format?: PingRetrieveFormatEnum;
}

/**
 * 
 */
export class PingApi extends runtime.BaseAPI {

    /**
     * Responds with a generic message for use in checking whether the API is available. This response directly calls API code and indicates that the host is reachable and processing requests.
     * Server heartbeat operation
     */
    async pingRetrieveRaw(requestParameters: PingRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PingResponse>> {
        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/ping/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PingResponseFromJSON(jsonValue));
    }

    /**
     * Responds with a generic message for use in checking whether the API is available. This response directly calls API code and indicates that the host is reachable and processing requests.
     * Server heartbeat operation
     */
    async pingRetrieve(requestParameters: PingRetrieveRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PingResponse> {
        const response = await this.pingRetrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const PingRetrieveFormatEnum = {
    Html: 'html',
    Json: 'json'
} as const;
export type PingRetrieveFormatEnum = typeof PingRetrieveFormatEnum[keyof typeof PingRetrieveFormatEnum];
