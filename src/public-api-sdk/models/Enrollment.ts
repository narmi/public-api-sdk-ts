/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Device } from './Device';
import {
    DeviceFromJSON,
    DeviceFromJSONTyped,
    DeviceToJSON,
} from './Device';
import type { EnrollmentUserCategoryEnum } from './EnrollmentUserCategoryEnum';
import {
    EnrollmentUserCategoryEnumFromJSON,
    EnrollmentUserCategoryEnumFromJSONTyped,
    EnrollmentUserCategoryEnumToJSON,
} from './EnrollmentUserCategoryEnum';
import type { Profile } from './Profile';
import {
    ProfileFromJSON,
    ProfileFromJSONTyped,
    ProfileToJSON,
} from './Profile';

/**
 * 
 * @export
 * @interface Enrollment
 */
export interface Enrollment {
    /**
     * 
     * @type {EnrollmentUserCategoryEnum}
     * @memberof Enrollment
     */
    userCategory?: EnrollmentUserCategoryEnum;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    primaryAccountNumber?: string;
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    ssn?: string;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    ein?: string;
    /**
     * If user is pre-validated via Link Service, supply encoded payload instead of other fields.
     * @type {string}
     * @memberof Enrollment
     */
    payload?: string;
    /**
     * 
     * @type {Profile}
     * @memberof Enrollment
     */
    readonly user: Profile;
    /**
     * 
     * @type {Array<Device>}
     * @memberof Enrollment
     */
    readonly devices: Array<Device>;
}

/**
 * Check if a given object implements the Enrollment interface.
 */
export function instanceOfEnrollment(value: object): value is Enrollment {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('devices' in value) || value['devices'] === undefined) return false;
    return true;
}

export function EnrollmentFromJSON(json: any): Enrollment {
    return EnrollmentFromJSONTyped(json, false);
}

export function EnrollmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Enrollment {
    if (json == null) {
        return json;
    }
    return {
        
        'userCategory': json['user_category'] == null ? undefined : EnrollmentUserCategoryEnumFromJSON(json['user_category']),
        'primaryAccountNumber': json['primary_account_number'] == null ? undefined : json['primary_account_number'],
        'dob': json['dob'] == null ? undefined : (new Date(json['dob'])),
        'ssn': json['ssn'] == null ? undefined : json['ssn'],
        'ein': json['ein'] == null ? undefined : json['ein'],
        'payload': json['payload'] == null ? undefined : json['payload'],
        'user': ProfileFromJSON(json['user']),
        'devices': ((json['devices'] as Array<any>).map(DeviceFromJSON)),
    };
}

export function EnrollmentToJSON(value?: Omit<Enrollment, 'user'|'devices'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'user_category': EnrollmentUserCategoryEnumToJSON(value['userCategory']),
        'primary_account_number': value['primaryAccountNumber'],
        'dob': value['dob'] == null ? undefined : ((value['dob']).toISOString().substring(0,10)),
        'ssn': value['ssn'],
        'ein': value['ein'],
        'payload': value['payload'],
    };
}

