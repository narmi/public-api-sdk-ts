/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2025.3.53)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PromptConfiguration
 */
export interface PromptConfiguration {
    /**
     * 
     * @type {string}
     * @memberof PromptConfiguration
     */
    uuid: string;
    /**
     * Override title for this prompt
     * @type {string}
     * @memberof PromptConfiguration
     */
    title: string;
    /**
     * Override description for this prompt
     * @type {string}
     * @memberof PromptConfiguration
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof PromptConfiguration
     */
    link: string;
    /**
     * 
     * @type {string}
     * @memberof PromptConfiguration
     */
    eventName: string;
    /**
     * 
     * @type {string}
     * @memberof PromptConfiguration
     */
    iconName: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof PromptConfiguration
     */
    platforms: Array<any>;
    /**
     * Determines display order within the group
     * @type {number}
     * @memberof PromptConfiguration
     */
    priority?: number;
    /**
     * 
     * @type {string}
     * @memberof PromptConfiguration
     */
    readonly status?: string;
}

/**
 * Check if a given object implements the PromptConfiguration interface.
 */
export function instanceOfPromptConfiguration(value: object): value is PromptConfiguration {
    if (!('uuid' in value) || value['uuid'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('link' in value) || value['link'] === undefined) return false;
    if (!('eventName' in value) || value['eventName'] === undefined) return false;
    if (!('iconName' in value) || value['iconName'] === undefined) return false;
    if (!('platforms' in value) || value['platforms'] === undefined) return false;
    return true;
}

export function PromptConfigurationFromJSON(json: any): PromptConfiguration {
    return PromptConfigurationFromJSONTyped(json, false);
}

export function PromptConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromptConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'title': json['title'],
        'description': json['description'],
        'link': json['link'],
        'eventName': json['event_name'],
        'iconName': json['icon_name'],
        'platforms': json['platforms'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function PromptConfigurationToJSON(value?: Omit<PromptConfiguration, 'status'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'uuid': value['uuid'],
        'title': value['title'],
        'description': value['description'],
        'link': value['link'],
        'event_name': value['eventName'],
        'icon_name': value['iconName'],
        'platforms': value['platforms'],
        'priority': value['priority'],
    };
}

