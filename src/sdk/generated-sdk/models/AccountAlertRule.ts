/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2025.6.130)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeliveryChannelsEnum } from './DeliveryChannelsEnum';
import {
    DeliveryChannelsEnumFromJSON,
    DeliveryChannelsEnumFromJSONTyped,
    DeliveryChannelsEnumToJSON,
} from './DeliveryChannelsEnum';
import type { AccountAlertRuleAlertKeyEnum } from './AccountAlertRuleAlertKeyEnum';
import {
    AccountAlertRuleAlertKeyEnumFromJSON,
    AccountAlertRuleAlertKeyEnumFromJSONTyped,
    AccountAlertRuleAlertKeyEnumToJSON,
} from './AccountAlertRuleAlertKeyEnum';

/**
 * 
 * @export
 * @interface AccountAlertRule
 */
export interface AccountAlertRule {
    /**
     * 
     * @type {string}
     * @memberof AccountAlertRule
     */
    readonly id?: string;
    /**
     * Recurrence rule in RFC 5545 format
     * @type {string}
     * @memberof AccountAlertRule
     */
    rrule?: string | null;
    /**
     * Alert type, can be one of `available_balance` or `low_available_balance`.
     * 
     * * `available_balance` - available_balance
     * * `low_available_balance` - low_available_balance
     * @type {AccountAlertRuleAlertKeyEnum}
     * @memberof AccountAlertRule
     */
    alertKey: AccountAlertRuleAlertKeyEnum;
    /**
     * 
     * @type {Date}
     * @memberof AccountAlertRule
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AccountAlertRule
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AccountAlertRule
     */
    readonly nextAlertAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof AccountAlertRule
     */
    thresholdAmount?: number | null;
    /**
     * 
     * @type {Array<DeliveryChannelsEnum>}
     * @memberof AccountAlertRule
     */
    deliveryChannels: Array<DeliveryChannelsEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AccountAlertRule
     */
    subscribedAccounts: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof AccountAlertRule
     */
    readonly lastDeliveredDate?: Date | null;
}

/**
 * Check if a given object implements the AccountAlertRule interface.
 */
export function instanceOfAccountAlertRule(value: object): value is AccountAlertRule {
    if (!('alertKey' in value) || value['alertKey'] === undefined) return false;
    if (!('deliveryChannels' in value) || value['deliveryChannels'] === undefined) return false;
    if (!('subscribedAccounts' in value) || value['subscribedAccounts'] === undefined) return false;
    return true;
}

export function AccountAlertRuleFromJSON(json: any): AccountAlertRule {
    return AccountAlertRuleFromJSONTyped(json, false);
}

export function AccountAlertRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountAlertRule {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'rrule': json['rrule'] == null ? undefined : json['rrule'],
        'alertKey': AccountAlertRuleAlertKeyEnumFromJSON(json['alert_key']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'nextAlertAt': json['next_alert_at'] == null ? undefined : (new Date(json['next_alert_at'])),
        'thresholdAmount': json['threshold_amount'] == null ? undefined : json['threshold_amount'],
        'deliveryChannels': ((json['delivery_channels'] as Array<any>).map(DeliveryChannelsEnumFromJSON)),
        'subscribedAccounts': json['subscribed_accounts'],
        'lastDeliveredDate': json['last_delivered_date'] == null ? undefined : (new Date(json['last_delivered_date'])),
    };
}

export function AccountAlertRuleToJSON(value?: Omit<AccountAlertRule, 'id'|'created_at'|'updated_at'|'next_alert_at'|'last_delivered_date'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'rrule': value['rrule'],
        'alert_key': AccountAlertRuleAlertKeyEnumToJSON(value['alertKey']),
        'threshold_amount': value['thresholdAmount'],
        'delivery_channels': ((value['deliveryChannels'] as Array<any>).map(DeliveryChannelsEnumToJSON)),
        'subscribed_accounts': value['subscribedAccounts'],
    };
}

