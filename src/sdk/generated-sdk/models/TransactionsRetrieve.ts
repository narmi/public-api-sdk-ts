/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PageNumberPagination } from './PageNumberPagination';
import {
    PageNumberPaginationFromJSON,
    PageNumberPaginationFromJSONTyped,
    PageNumberPaginationToJSON,
} from './PageNumberPagination';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';

/**
 * 
 * @export
 * @interface TransactionsRetrieve
 */
export interface TransactionsRetrieve {
    /**
     * 
     * @type {Transaction}
     * @memberof TransactionsRetrieve
     */
    transaction: Transaction;
    /**
     * 
     * @type {PageNumberPagination}
     * @memberof TransactionsRetrieve
     */
    links: PageNumberPagination;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof TransactionsRetrieve
     */
    meta: { [key: string]: any; };
}

/**
 * Check if a given object implements the TransactionsRetrieve interface.
 */
export function instanceOfTransactionsRetrieve(value: object): value is TransactionsRetrieve {
    if (!('transaction' in value) || value['transaction'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function TransactionsRetrieveFromJSON(json: any): TransactionsRetrieve {
    return TransactionsRetrieveFromJSONTyped(json, false);
}

export function TransactionsRetrieveFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsRetrieve {
    if (json == null) {
        return json;
    }
    return {
        
        'transaction': TransactionFromJSON(json['transaction']),
        'links': PageNumberPaginationFromJSON(json['links']),
        'meta': json['meta'],
    };
}

export function TransactionsRetrieveToJSON(value?: TransactionsRetrieve | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'transaction': TransactionToJSON(value['transaction']),
        'links': PageNumberPaginationToJSON(value['links']),
        'meta': value['meta'],
    };
}

