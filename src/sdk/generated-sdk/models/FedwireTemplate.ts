/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2024.10.120)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FedwireTemplate
 */
export interface FedwireTemplate {
    /**
     * Date when the template was last used to send a wire.
     * @type {Date}
     * @memberof FedwireTemplate
     */
    readonly lastUsed?: Date | null;
    /**
     * The version ID of the template, based on when template or recipient details were last updated.
     * @type {string}
     * @memberof FedwireTemplate
     */
    readonly versionId?: string;
    /**
     * 
     * @type {string}
     * @memberof FedwireTemplate
     */
    readonly id?: string;
    /**
     * The UUID of the wire recipient for wires sent using this template.
     * @type {string}
     * @memberof FedwireTemplate
     */
    recipient: string;
    /**
     * The UUID of the source account for wires sent using this template.
     * @type {string}
     * @memberof FedwireTemplate
     */
    sourceAccount: string;
    /**
     * Name of the wire template for easy reference in the UI. This name must be unique to all templates owned by an organization.
     * @type {string}
     * @memberof FedwireTemplate
     */
    name: string;
    /**
     * Choices are configurable via Institution Settings. Please refer to Institution Settings for the most current list of wire reason types. If not provided, this value must be included when making a request to send a wire.
     * @type {string}
     * @memberof FedwireTemplate
     */
    wireReason?: string | null;
    /**
     * A field that returns the original value in the currency's smallest unit (e.g. cents). If not provided, this value must be included when making a request to send a wire. 
     * @type {number}
     * @memberof FedwireTemplate
     */
    amount?: number | null;
    /**
     * Memo for wires sent using this template. If not provided, this value must be included when making a request to send a wire.
     * @type {string}
     * @memberof FedwireTemplate
     */
    memo?: string | null;
}

/**
 * Check if a given object implements the FedwireTemplate interface.
 */
export function instanceOfFedwireTemplate(value: object): value is FedwireTemplate {
    if (!('recipient' in value) || value['recipient'] === undefined) return false;
    if (!('sourceAccount' in value) || value['sourceAccount'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function FedwireTemplateFromJSON(json: any): FedwireTemplate {
    return FedwireTemplateFromJSONTyped(json, false);
}

export function FedwireTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): FedwireTemplate {
    if (json == null) {
        return json;
    }
    return {
        
        'lastUsed': json['last_used'] == null ? undefined : (new Date(json['last_used'])),
        'versionId': json['version_id'] == null ? undefined : json['version_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'recipient': json['recipient'],
        'sourceAccount': json['source_account'],
        'name': json['name'],
        'wireReason': json['wire_reason'] == null ? undefined : json['wire_reason'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}

export function FedwireTemplateToJSON(value?: Omit<FedwireTemplate, 'last_used'|'version_id'|'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'recipient': value['recipient'],
        'source_account': value['sourceAccount'],
        'name': value['name'],
        'wire_reason': value['wireReason'],
        'amount': value['amount'],
        'memo': value['memo'],
    };
}

