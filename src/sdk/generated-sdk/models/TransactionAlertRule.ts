/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2000.1.5)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeliveryChannelsEnum } from './DeliveryChannelsEnum';
import {
    DeliveryChannelsEnumFromJSON,
    DeliveryChannelsEnumFromJSONTyped,
    DeliveryChannelsEnumToJSON,
} from './DeliveryChannelsEnum';
import type { AlertKey61cEnum } from './AlertKey61cEnum';
import {
    AlertKey61cEnumFromJSON,
    AlertKey61cEnumFromJSONTyped,
    AlertKey61cEnumToJSON,
} from './AlertKey61cEnum';

/**
 * 
 * @export
 * @interface TransactionAlertRule
 */
export interface TransactionAlertRule {
    /**
     * 
     * @type {string}
     * @memberof TransactionAlertRule
     */
    readonly id?: string;
    /**
     * Alert type, can be one of `credit` or `debit`.
     * 
     * * `credit` - credit
     * * `debit` - debit
     * @type {AlertKey61cEnum}
     * @memberof TransactionAlertRule
     */
    alertKey: AlertKey61cEnum;
    /**
     * 
     * @type {Date}
     * @memberof TransactionAlertRule
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransactionAlertRule
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {Array<DeliveryChannelsEnum>}
     * @memberof TransactionAlertRule
     */
    deliveryChannels: Array<DeliveryChannelsEnum>;
    /**
     * 
     * @type {string}
     * @memberof TransactionAlertRule
     */
    transactionQuery: string;
    /**
     * 
     * @type {Date}
     * @memberof TransactionAlertRule
     */
    readonly lastDeliveredDate?: Date | null;
}

/**
 * Check if a given object implements the TransactionAlertRule interface.
 */
export function instanceOfTransactionAlertRule(value: object): value is TransactionAlertRule {
    if (!('alertKey' in value) || value['alertKey'] === undefined) return false;
    if (!('deliveryChannels' in value) || value['deliveryChannels'] === undefined) return false;
    if (!('transactionQuery' in value) || value['transactionQuery'] === undefined) return false;
    return true;
}

export function TransactionAlertRuleFromJSON(json: any): TransactionAlertRule {
    return TransactionAlertRuleFromJSONTyped(json, false);
}

export function TransactionAlertRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionAlertRule {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'alertKey': AlertKey61cEnumFromJSON(json['alert_key']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'deliveryChannels': ((json['delivery_channels'] as Array<any>).map(DeliveryChannelsEnumFromJSON)),
        'transactionQuery': json['transaction_query'],
        'lastDeliveredDate': json['last_delivered_date'] == null ? undefined : (new Date(json['last_delivered_date'])),
    };
}

export function TransactionAlertRuleToJSON(value?: Omit<TransactionAlertRule, 'id'|'created_at'|'updated_at'|'last_delivered_date'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'alert_key': AlertKey61cEnumToJSON(value['alertKey']),
        'delivery_channels': ((value['deliveryChannels'] as Array<any>).map(DeliveryChannelsEnumToJSON)),
        'transaction_query': value['transactionQuery'],
    };
}

