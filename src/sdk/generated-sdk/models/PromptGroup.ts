/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2025.4.238)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PromptConfiguration } from './PromptConfiguration';
import {
    PromptConfigurationFromJSON,
    PromptConfigurationFromJSONTyped,
    PromptConfigurationToJSON,
} from './PromptConfiguration';

/**
 * 
 * @export
 * @interface PromptGroup
 */
export interface PromptGroup {
    /**
     * 
     * @type {string}
     * @memberof PromptGroup
     */
    title: string;
    /**
     * Description for the group of prompts
     * @type {string}
     * @memberof PromptGroup
     */
    description: string;
    /**
     * 
     * @type {Array<PromptConfiguration>}
     * @memberof PromptGroup
     */
    readonly prompts?: Array<PromptConfiguration>;
}

/**
 * Check if a given object implements the PromptGroup interface.
 */
export function instanceOfPromptGroup(value: object): value is PromptGroup {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function PromptGroupFromJSON(json: any): PromptGroup {
    return PromptGroupFromJSONTyped(json, false);
}

export function PromptGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromptGroup {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'prompts': json['prompts'] == null ? undefined : ((json['prompts'] as Array<any>).map(PromptConfigurationFromJSON)),
    };
}

export function PromptGroupToJSON(value?: Omit<PromptGroup, 'prompts'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'description': value['description'],
    };
}

