/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2025.6.157)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecurringTransaction } from './RecurringTransaction';
import {
    RecurringTransactionFromJSON,
    RecurringTransactionFromJSONTyped,
    RecurringTransactionToJSON,
} from './RecurringTransaction';

/**
 * 
 * @export
 * @interface CardSubscriptions
 */
export interface CardSubscriptions {
    /**
     * 
     * @type {string}
     * @memberof CardSubscriptions
     */
    month: string;
    /**
     * 
     * @type {number}
     * @memberof CardSubscriptions
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof CardSubscriptions
     */
    transactionCount: number;
    /**
     * 
     * @type {Array<RecurringTransaction>}
     * @memberof CardSubscriptions
     */
    transactions: Array<RecurringTransaction>;
}

/**
 * Check if a given object implements the CardSubscriptions interface.
 */
export function instanceOfCardSubscriptions(value: object): value is CardSubscriptions {
    if (!('month' in value) || value['month'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('transactionCount' in value) || value['transactionCount'] === undefined) return false;
    if (!('transactions' in value) || value['transactions'] === undefined) return false;
    return true;
}

export function CardSubscriptionsFromJSON(json: any): CardSubscriptions {
    return CardSubscriptionsFromJSONTyped(json, false);
}

export function CardSubscriptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardSubscriptions {
    if (json == null) {
        return json;
    }
    return {
        
        'month': json['month'],
        'total': json['total'],
        'transactionCount': json['transaction_count'],
        'transactions': ((json['transactions'] as Array<any>).map(RecurringTransactionFromJSON)),
    };
}

export function CardSubscriptionsToJSON(value?: CardSubscriptions | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'month': value['month'],
        'total': value['total'],
        'transaction_count': value['transactionCount'],
        'transactions': ((value['transactions'] as Array<any>).map(RecurringTransactionToJSON)),
    };
}

