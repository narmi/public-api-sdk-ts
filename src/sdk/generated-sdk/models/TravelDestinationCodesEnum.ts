/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1 (v2025.2.255)
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * * `AW` - AW
 * * `AF` - AF
 * * `AO` - AO
 * * `AI` - AI
 * * `AX` - AX
 * * `AL` - AL
 * * `AD` - AD
 * * `AE` - AE
 * * `AR` - AR
 * * `AM` - AM
 * * `AS` - AS
 * * `AQ` - AQ
 * * `TF` - TF
 * * `AG` - AG
 * * `AU` - AU
 * * `AT` - AT
 * * `AZ` - AZ
 * * `BI` - BI
 * * `BE` - BE
 * * `BJ` - BJ
 * * `BQ` - BQ
 * * `BF` - BF
 * * `BD` - BD
 * * `BG` - BG
 * * `BH` - BH
 * * `BS` - BS
 * * `BA` - BA
 * * `BL` - BL
 * * `BY` - BY
 * * `BZ` - BZ
 * * `BM` - BM
 * * `BO` - BO
 * * `BR` - BR
 * * `BB` - BB
 * * `BN` - BN
 * * `BT` - BT
 * * `BV` - BV
 * * `BW` - BW
 * * `CF` - CF
 * * `CA` - CA
 * * `CC` - CC
 * * `CH` - CH
 * * `CL` - CL
 * * `CN` - CN
 * * `CI` - CI
 * * `CM` - CM
 * * `CD` - CD
 * * `CG` - CG
 * * `CK` - CK
 * * `CO` - CO
 * * `KM` - KM
 * * `CV` - CV
 * * `CR` - CR
 * * `CU` - CU
 * * `CW` - CW
 * * `CX` - CX
 * * `KY` - KY
 * * `CY` - CY
 * * `CZ` - CZ
 * * `DE` - DE
 * * `DJ` - DJ
 * * `DM` - DM
 * * `DK` - DK
 * * `DO` - DO
 * * `DZ` - DZ
 * * `EC` - EC
 * * `EG` - EG
 * * `ER` - ER
 * * `EH` - EH
 * * `ES` - ES
 * * `EE` - EE
 * * `ET` - ET
 * * `FI` - FI
 * * `FJ` - FJ
 * * `FK` - FK
 * * `FR` - FR
 * * `FO` - FO
 * * `FM` - FM
 * * `GA` - GA
 * * `GB` - GB
 * * `GE` - GE
 * * `GG` - GG
 * * `GH` - GH
 * * `GI` - GI
 * * `GN` - GN
 * * `GP` - GP
 * * `GM` - GM
 * * `GW` - GW
 * * `GQ` - GQ
 * * `GR` - GR
 * * `GD` - GD
 * * `GL` - GL
 * * `GT` - GT
 * * `GF` - GF
 * * `GU` - GU
 * * `GY` - GY
 * * `HK` - HK
 * * `HM` - HM
 * * `HN` - HN
 * * `HR` - HR
 * * `HT` - HT
 * * `HU` - HU
 * * `ID` - ID
 * * `IM` - IM
 * * `IN` - IN
 * * `IO` - IO
 * * `IE` - IE
 * * `IR` - IR
 * * `IQ` - IQ
 * * `IS` - IS
 * * `IL` - IL
 * * `IT` - IT
 * * `JM` - JM
 * * `JE` - JE
 * * `JO` - JO
 * * `JP` - JP
 * * `KZ` - KZ
 * * `KE` - KE
 * * `KG` - KG
 * * `KH` - KH
 * * `KI` - KI
 * * `KN` - KN
 * * `KR` - KR
 * * `KW` - KW
 * * `LA` - LA
 * * `LB` - LB
 * * `LR` - LR
 * * `LY` - LY
 * * `LC` - LC
 * * `LI` - LI
 * * `LK` - LK
 * * `LS` - LS
 * * `LT` - LT
 * * `LU` - LU
 * * `LV` - LV
 * * `MO` - MO
 * * `MF` - MF
 * * `MA` - MA
 * * `MC` - MC
 * * `MD` - MD
 * * `MG` - MG
 * * `MV` - MV
 * * `MX` - MX
 * * `MH` - MH
 * * `MK` - MK
 * * `ML` - ML
 * * `MT` - MT
 * * `MM` - MM
 * * `ME` - ME
 * * `MN` - MN
 * * `MP` - MP
 * * `MZ` - MZ
 * * `MR` - MR
 * * `MS` - MS
 * * `MQ` - MQ
 * * `MU` - MU
 * * `MW` - MW
 * * `MY` - MY
 * * `YT` - YT
 * * `NA` - NA
 * * `NC` - NC
 * * `NE` - NE
 * * `NF` - NF
 * * `NG` - NG
 * * `NI` - NI
 * * `NU` - NU
 * * `NL` - NL
 * * `NO` - NO
 * * `NP` - NP
 * * `NR` - NR
 * * `NZ` - NZ
 * * `OM` - OM
 * * `PK` - PK
 * * `PA` - PA
 * * `PN` - PN
 * * `PE` - PE
 * * `PH` - PH
 * * `PW` - PW
 * * `PG` - PG
 * * `PL` - PL
 * * `PR` - PR
 * * `KP` - KP
 * * `PT` - PT
 * * `PY` - PY
 * * `PS` - PS
 * * `PF` - PF
 * * `QA` - QA
 * * `RE` - RE
 * * `RO` - RO
 * * `RU` - RU
 * * `RW` - RW
 * * `SA` - SA
 * * `SD` - SD
 * * `SN` - SN
 * * `SG` - SG
 * * `GS` - GS
 * * `SH` - SH
 * * `SJ` - SJ
 * * `SB` - SB
 * * `SL` - SL
 * * `SV` - SV
 * * `SM` - SM
 * * `SO` - SO
 * * `PM` - PM
 * * `RS` - RS
 * * `SS` - SS
 * * `ST` - ST
 * * `SR` - SR
 * * `SK` - SK
 * * `SI` - SI
 * * `SE` - SE
 * * `SZ` - SZ
 * * `SX` - SX
 * * `SC` - SC
 * * `SY` - SY
 * * `TC` - TC
 * * `TD` - TD
 * * `TG` - TG
 * * `TH` - TH
 * * `TJ` - TJ
 * * `TK` - TK
 * * `TM` - TM
 * * `TL` - TL
 * * `TO` - TO
 * * `TT` - TT
 * * `TN` - TN
 * * `TR` - TR
 * * `TV` - TV
 * * `TW` - TW
 * * `TZ` - TZ
 * * `UG` - UG
 * * `UA` - UA
 * * `UM` - UM
 * * `UY` - UY
 * * `US` - US
 * * `UZ` - UZ
 * * `VA` - VA
 * * `VC` - VC
 * * `VE` - VE
 * * `VG` - VG
 * * `VI` - VI
 * * `VN` - VN
 * * `VU` - VU
 * * `WF` - WF
 * * `WS` - WS
 * * `YE` - YE
 * * `ZA` - ZA
 * * `ZM` - ZM
 * * `ZW` - ZW
 * @export
 */
export const TravelDestinationCodesEnum = {
    Aw: 'AW',
    Af: 'AF',
    Ao: 'AO',
    Ai: 'AI',
    Ax: 'AX',
    Al: 'AL',
    Ad: 'AD',
    Ae: 'AE',
    Ar: 'AR',
    Am: 'AM',
    As: 'AS',
    Aq: 'AQ',
    Tf: 'TF',
    Ag: 'AG',
    Au: 'AU',
    At: 'AT',
    Az: 'AZ',
    Bi: 'BI',
    Be: 'BE',
    Bj: 'BJ',
    Bq: 'BQ',
    Bf: 'BF',
    Bd: 'BD',
    Bg: 'BG',
    Bh: 'BH',
    Bs: 'BS',
    Ba: 'BA',
    Bl: 'BL',
    By: 'BY',
    Bz: 'BZ',
    Bm: 'BM',
    Bo: 'BO',
    Br: 'BR',
    Bb: 'BB',
    Bn: 'BN',
    Bt: 'BT',
    Bv: 'BV',
    Bw: 'BW',
    Cf: 'CF',
    Ca: 'CA',
    Cc: 'CC',
    Ch: 'CH',
    Cl: 'CL',
    Cn: 'CN',
    Ci: 'CI',
    Cm: 'CM',
    Cd: 'CD',
    Cg: 'CG',
    Ck: 'CK',
    Co: 'CO',
    Km: 'KM',
    Cv: 'CV',
    Cr: 'CR',
    Cu: 'CU',
    Cw: 'CW',
    Cx: 'CX',
    Ky: 'KY',
    Cy: 'CY',
    Cz: 'CZ',
    De: 'DE',
    Dj: 'DJ',
    Dm: 'DM',
    Dk: 'DK',
    Do: 'DO',
    Dz: 'DZ',
    Ec: 'EC',
    Eg: 'EG',
    Er: 'ER',
    Eh: 'EH',
    Es: 'ES',
    Ee: 'EE',
    Et: 'ET',
    Fi: 'FI',
    Fj: 'FJ',
    Fk: 'FK',
    Fr: 'FR',
    Fo: 'FO',
    Fm: 'FM',
    Ga: 'GA',
    Gb: 'GB',
    Ge: 'GE',
    Gg: 'GG',
    Gh: 'GH',
    Gi: 'GI',
    Gn: 'GN',
    Gp: 'GP',
    Gm: 'GM',
    Gw: 'GW',
    Gq: 'GQ',
    Gr: 'GR',
    Gd: 'GD',
    Gl: 'GL',
    Gt: 'GT',
    Gf: 'GF',
    Gu: 'GU',
    Gy: 'GY',
    Hk: 'HK',
    Hm: 'HM',
    Hn: 'HN',
    Hr: 'HR',
    Ht: 'HT',
    Hu: 'HU',
    Id: 'ID',
    Im: 'IM',
    In: 'IN',
    Io: 'IO',
    Ie: 'IE',
    Ir: 'IR',
    Iq: 'IQ',
    Is: 'IS',
    Il: 'IL',
    It: 'IT',
    Jm: 'JM',
    Je: 'JE',
    Jo: 'JO',
    Jp: 'JP',
    Kz: 'KZ',
    Ke: 'KE',
    Kg: 'KG',
    Kh: 'KH',
    Ki: 'KI',
    Kn: 'KN',
    Kr: 'KR',
    Kw: 'KW',
    La: 'LA',
    Lb: 'LB',
    Lr: 'LR',
    Ly: 'LY',
    Lc: 'LC',
    Li: 'LI',
    Lk: 'LK',
    Ls: 'LS',
    Lt: 'LT',
    Lu: 'LU',
    Lv: 'LV',
    Mo: 'MO',
    Mf: 'MF',
    Ma: 'MA',
    Mc: 'MC',
    Md: 'MD',
    Mg: 'MG',
    Mv: 'MV',
    Mx: 'MX',
    Mh: 'MH',
    Mk: 'MK',
    Ml: 'ML',
    Mt: 'MT',
    Mm: 'MM',
    Me: 'ME',
    Mn: 'MN',
    Mp: 'MP',
    Mz: 'MZ',
    Mr: 'MR',
    Ms: 'MS',
    Mq: 'MQ',
    Mu: 'MU',
    Mw: 'MW',
    My: 'MY',
    Yt: 'YT',
    Na: 'NA',
    Nc: 'NC',
    Ne: 'NE',
    Nf: 'NF',
    Ng: 'NG',
    Ni: 'NI',
    Nu: 'NU',
    Nl: 'NL',
    No: 'NO',
    Np: 'NP',
    Nr: 'NR',
    Nz: 'NZ',
    Om: 'OM',
    Pk: 'PK',
    Pa: 'PA',
    Pn: 'PN',
    Pe: 'PE',
    Ph: 'PH',
    Pw: 'PW',
    Pg: 'PG',
    Pl: 'PL',
    Pr: 'PR',
    Kp: 'KP',
    Pt: 'PT',
    Py: 'PY',
    Ps: 'PS',
    Pf: 'PF',
    Qa: 'QA',
    Re: 'RE',
    Ro: 'RO',
    Ru: 'RU',
    Rw: 'RW',
    Sa: 'SA',
    Sd: 'SD',
    Sn: 'SN',
    Sg: 'SG',
    Gs: 'GS',
    Sh: 'SH',
    Sj: 'SJ',
    Sb: 'SB',
    Sl: 'SL',
    Sv: 'SV',
    Sm: 'SM',
    So: 'SO',
    Pm: 'PM',
    Rs: 'RS',
    Ss: 'SS',
    St: 'ST',
    Sr: 'SR',
    Sk: 'SK',
    Si: 'SI',
    Se: 'SE',
    Sz: 'SZ',
    Sx: 'SX',
    Sc: 'SC',
    Sy: 'SY',
    Tc: 'TC',
    Td: 'TD',
    Tg: 'TG',
    Th: 'TH',
    Tj: 'TJ',
    Tk: 'TK',
    Tm: 'TM',
    Tl: 'TL',
    To: 'TO',
    Tt: 'TT',
    Tn: 'TN',
    Tr: 'TR',
    Tv: 'TV',
    Tw: 'TW',
    Tz: 'TZ',
    Ug: 'UG',
    Ua: 'UA',
    Um: 'UM',
    Uy: 'UY',
    Us: 'US',
    Uz: 'UZ',
    Va: 'VA',
    Vc: 'VC',
    Ve: 'VE',
    Vg: 'VG',
    Vi: 'VI',
    Vn: 'VN',
    Vu: 'VU',
    Wf: 'WF',
    Ws: 'WS',
    Ye: 'YE',
    Za: 'ZA',
    Zm: 'ZM',
    Zw: 'ZW'
} as const;
export type TravelDestinationCodesEnum = typeof TravelDestinationCodesEnum[keyof typeof TravelDestinationCodesEnum];


export function instanceOfTravelDestinationCodesEnum(value: any): boolean {
    for (const key in TravelDestinationCodesEnum) {
        if (Object.prototype.hasOwnProperty.call(TravelDestinationCodesEnum, key)) {
            if ((TravelDestinationCodesEnum as Record<string, TravelDestinationCodesEnum>)[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function TravelDestinationCodesEnumFromJSON(json: any): TravelDestinationCodesEnum {
    return TravelDestinationCodesEnumFromJSONTyped(json, false);
}

export function TravelDestinationCodesEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): TravelDestinationCodesEnum {
    return json as TravelDestinationCodesEnum;
}

export function TravelDestinationCodesEnumToJSON(value?: TravelDestinationCodesEnum | null): any {
    return value as any;
}

