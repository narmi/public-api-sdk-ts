/* tslint:disable */
/* eslint-disable */
/**
 * Narmi Public API
 * To read about Public API access and authentication, go to [API Overview](https://docs.narmi.com/docs/narmi-developer-docs/xl9dvbz84o11l-introduction).
 *
 * The version of the OpenAPI document: v1
 * Contact: support@narmi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GeneralError,
  WireTransaction,
  WiresFedwireTemplatesCreate409Response,
} from '../models/index';
import {
    GeneralErrorFromJSON,
    GeneralErrorToJSON,
    WireTransactionFromJSON,
    WireTransactionToJSON,
    WiresFedwireTemplatesCreate409ResponseFromJSON,
    WiresFedwireTemplatesCreate409ResponseToJSON,
} from '../models/index';

export interface WiresFedwireTemplatesCreateRequest {
    wireTransaction: Omit<WireTransaction, 'id'|'created_at'|'processed_at'|'from_account_display'|'display_state'|'to_account_institution_name'|'from_account'|'to_account_number'|'to_account_routing_number'|'beneficiary_name'|'beneficiary_address_1'|'beneficiary_address_2'|'beneficiary_address_3'|'memo_1'|'memo_2'|'memo_3'|'memo_4'|'template_name'|'state'>;
    format?: WiresFedwireTemplatesCreateFormatEnum;
}

/**
 * 
 */
export class WiresFromFedwireTemplatesApi extends runtime.BaseAPI {

    /**
     * Send a wire using an existing wire template.
     * Send a wire using a wire template
     */
    async wiresFedwireTemplatesCreateRaw(requestParameters: WiresFedwireTemplatesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WireTransaction>> {
        if (requestParameters['wireTransaction'] == null) {
            throw new runtime.RequiredError(
                'wireTransaction',
                'Required parameter "wireTransaction" was null or undefined when calling wiresFedwireTemplatesCreate().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/v1/wires/fedwire_templates/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WireTransactionToJSON(requestParameters['wireTransaction']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WireTransactionFromJSON(jsonValue));
    }

    /**
     * Send a wire using an existing wire template.
     * Send a wire using a wire template
     */
    async wiresFedwireTemplatesCreate(requestParameters: WiresFedwireTemplatesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WireTransaction> {
        const response = await this.wiresFedwireTemplatesCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const WiresFedwireTemplatesCreateFormatEnum = {
    Html: 'html',
    Json: 'json'
} as const;
export type WiresFedwireTemplatesCreateFormatEnum = typeof WiresFedwireTemplatesCreateFormatEnum[keyof typeof WiresFedwireTemplatesCreateFormatEnum];
